<!DOCTYPE html>
<meta charset="utf-8">
<title>Keypath</title>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="../support.js"></script>

<script type="text/javascript">
    function keypath(keypath, objects, expected_keys) {
        var db,
          t = async_test(document.title + " - " + keypath);

        var open_rq = createdb(t);
        open_rq.onupgradeneeded = function(e) {
            db = e.target.result;
            var objStore = db.createObjectStore("store", { keyPath: keypath });

            for (var i = 0; i < objects.length; i++)
                objStore.add(objects[i]);
        };

        open_rq.onsuccess = function(e) {
            var actual_keys = [],
              rq = db.transaction("store")
                     .objectStore("store")
                     .openCursor();

            rq.onsuccess = t.step_func(function(e) {
                var cursor = e.target.result;

                if (cursor) {
                    actual_keys.push(cursor.key.valueOf());
                    cursor.continue();
                }
                else {
                    assert_equals(actual_keys.length, expected_keys.length, "array length");
                    assert_object_equals(actual_keys, expected_keys, "keyorder array");

                    t.done();
                }
            });
        };
    }

    keypath('my.key',
        [ { my: { key: 10 } } ],
        [ 10 ]);

    keypath('my.køi',
        [ { my: { køi: 5 } } ],
        [ 5 ]);

    keypath('my.key_ya',
        [ { my: { key_ya: 10 } } ],
        [ 10 ]);

    keypath('my.key$ya',
        [ { my: { key$ya: 10 } } ],
        [ 10 ]);

    keypath('my.$',
        [ { my: { $: 10 } } ],
        [ 10 ]);

    keypath('p.p.p.p.p.p.p.p.p.p.p.p.p.p',
        [ {p:{p:{p:{p:{p:{p:{p:{p:{p:{p:{p:{p:{p:{p:10}}}}}}}}}}}}}} ],
        [ 10 ]);

    keypath('str.length',
        [ { str: "pony" }, { str: "my" }, { str: "little" }, { str: "" } ],
        [ 0, 2, 4, 6 ]);

    keypath('arr.length',
        [ {arr: [0, 0, 0, 0]}, {arr: [{}, 0, "hei", "length", Infinity, []]}, {arr: [10, 10]}, { arr: []} ],
        [ 0, 2, 4, 6 ]);

    keypath('length',
        [ [10, 10], "123", { length: 20 } ],
        [ 2, 3, 20 ]);


</script>

<div id="log"></div>
