<?xml version="1.0" encoding="iso-8859-1"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>HTML Test: Browsing context is first created</title>
    <link rel="author" title="Intel" href="http://www.intel.com/" />
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
  </head>
  <body>
    <div id="log"></div>
    <script>
    <![CDATA[
    var iframe;
    var t1 = async_test("The document must be the single document in its browsing context session history");
    var t2 = async_test("The document's meta data");
    var t3 = async_test("The document's status");
    var t4 = async_test("The document's content");

    setup(function () {
      iframe = document.createElement("iframe");
    });

    iframe.onload = function () {
      t1.step(function () {
        assert_equals(frames[0].history.length, 1, "The history.length should be 1.");
      });
      t1.done();

      t2.step(function () {
        var doc = frames[0].document;
        assert_equals(doc.documentURI, "about:blank", "The document's address should be 'about:blank'.");
        assert_equals(doc.URL, "about:blank", "The document's address should be 'about:blank'.");
        assert_equals(doc.contentType, "text/html", "The document should be an HTML document.");
        assert_equals(doc.doctype, null, "The docType of a document without a document type declaration should be null.");
        assert_equals(doc.characterSet, "UTF-8", "The document's encoding should be 'UTF-8'.");
        assert_equals(frames[0].parent.document, document);
        assert_equals(doc.referrer, document.URL, "The document's referrer should be its creator document's address.");
      });
      t2.done();

      t3.step(function () {
        var doc = frames[0].document;
        assert_equals(doc.readyState, "complete", "The readyState attribute should be 'complete'.");
      });
      t3.done();

      t4.step(function () {
        var doc = frames[0].document;
        assert_equals(doc.childNodes.length, 1, "The document must have only one child.");
        assert_equals(doc.documentElement.tagName, "HTML");
        assert_equals(doc.documentElement.childNodes.length, 2, "The HTML element should have 2 children.");
        assert_equals(doc.documentElement.childNodes[0].tagName, "HEAD", "The first child of HTML element should be a HEAD element.");
        assert_false(doc.documentElement.childNodes[0].hasChildNodes(), "The HEAD element should not have children.");
        assert_equals(doc.documentElement.childNodes[1].tagName, "BODY", "The second child of HTML element should be a BODY element.");
        assert_false(doc.documentElement.childNodes[1].hasChildNodes(), "The BODY element should not have children.");
      });
      t4.done();
    }

    document.body.appendChild(iframe);
    ]]>
    </script>
  </body>
</html>
